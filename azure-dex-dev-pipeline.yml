pr: none
trigger: none

pool:
  name: Default

variables:
  sourceRepo: $(SOURCE_REPO)
  sourceBranch: "main"
  azureSourcePat: $(AZURE_SOURCE_PAT)
  azureDevOpsUser: $(AZURE_GIT_USER)
  azureDevOpsPass: $(AZURE_GIT_PASS)
  azureRepo: $(APP_SERVICE_REPO)
  azureBranch: "master"

stages:
  - stage: TestCode
    jobs:
      - job: TestBuildingCodeRepo
        steps:
          - checkout: self
            displayName: "Checkout source code"

          - script: |
              npm install
              npm run build:development
            displayName: "Building project for testing"

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: "$(Build.SourcesDirectory)"
              artifact: "build"
            displayName: "Publish build artifacts"

  - stage: PushToAzure
    dependsOn: TestCode
    jobs:
      - job: PushAzure
        steps:
          - download: current
            artifact: build
            displayName: "Download build artifacts"

          - script: |
              echo "Cloning the Azure repository..."
              git clone https://\$(azureDevOpsUser):$(azureDevOpsPass)@$(azureRepo) source
              cd source
              git remote -v

              # Check if the branch exists remotely and create it if it doesn't
              if ! git ls-remote --exit-code --heads origin $(azureBranch); then
                git checkout -b $(azureBranch)
              else
                git checkout $(azureBranch)
              fi
              # sync files between artifact and remote repo
              rsync -av --exclude='.git' $(Pipeline.Workspace)/build/ ./  # Exclude .git directory
              git config user.email "devs@dexfreight.io"
              git config user.name "devs@dexfreight.io"
              git add .
              git commit -m "Automated commit: Update from build" || echo "No changes to commit"
              # Deploy changes to remote
              git remote add azure https://\$(azureDevOpsUser):$(azureDevOpsPass)@$(azureRepo)
              git push azure $(azureBranch)
            displayName: "Clone source repo and push changes to Azure repository"
